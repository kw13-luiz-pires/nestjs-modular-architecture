services:
  app:
    build: .
    entrypoint: .docker/entrypoint.sh
    container_name: ${CONTAINER_NAME}-app
    ports:
      - '${APP_PORT}:3000'
      - '5555:5555'
      - '9229:9229'
    volumes:
      - .:/home/node/app
    depends_on:
      - db
      - redis
      - localstack
    networks:
      - app-network

  db:
    build: .docker/postgres
    container_name: ${CONTAINER_NAME}-db
    restart: always
    tty: true
    ports:
      - '${DB_PORT}:5432'
    volumes:
      - .docker/postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - app-network

  redis:
    container_name: ${CONTAINER_NAME}-redis
    image: redis:alpine
    ports:
      - '6379:6379'
    volumes:
      - .:/home/node/app
    networks:
      - app-network

  localstack:
    image: localstack/localstack:latest
    container_name: ${CONTAINER_NAME}-localstack
    ports:
      - '4566:4566' # Porta principal do LocalStack para todos os serviços
      - '4571:4571' # Porta adicional para alguns serviços
    environment:
      - SERVICES=s3,sns, location # Lista de serviços que você deseja emular
      - DEBUG=1 # Ativar logs de depuração para ajudar na resolução de problemas
      - DATA_DIR=/var/lib/localstack # Diretório para armazenar dados persistentes entre reinicializações
    volumes:
      - 'localstack_data:/var/lib/localstack' # Montagem do diretório local para persistência de dados
    networks:
      - app-network

volumes:
  localstack_data:

networks:
  app-network:
    driver: bridge
